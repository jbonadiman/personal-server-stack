{
  "$schema": "./templates.schema.json",
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "fresh rss",
      "description": "FreshRSS is a self-hosted RSS feed aggregator",
      "categories": [
        "self-hosted",
        "rss"
      ],
      "platform": "linux",
      "name": "freshrss",
      "network": "exposed",
      "logo": "https://raw.githubusercontent.com/FreshRSS/FreshRSS/edge/docs/img/FreshRSS-logo.png",
      "image": "linuxserver/freshrss:latest",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/config"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "Id of the user running the container"
        },
        {
          "name": "PGID",
          "label": "Id of the group running the container"
        },
        {
          "name": "TZ",
          "label": "Timezone for the container",
          "select": [
            {
              "text": "Etc/UTC (+00:00)",
              "value": "Etc/UTC",
              "default": true
            },
            {
              "text": "America/Sao_Paulo (-03:00)",
              "value": "America/Sao_Paulo"
            }
          ]
        },
        {
          "name": "CRON_MIN",
          "label": "Define minutes for the built-in cron job to automatically refresh feeds (see below for more advanced options)",
          "default": ""
        }
      ]
    },
    {
      "type": 1,
      "title": "nginx",
      "description": "High performance web server",
      "categories": [
        "webserver"
      ],
      "platform": "linux",
      "name": "nginx",
      "network": "exposed",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:alpine",
      "restart_policy": "unless-stopped",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/nginx/conf.d",
          "read_only": true
        },
        {
          "container": "/etc/nginx/certs",
          "read_only": true
        }
      ]
    },
    {
      "type": 1,
      "title": "ntfy",
      "description": "ntfy (pronounce: notify) is a simple HTTP-based pub-sub notification service",
      "categories": [
        "notification",
        "self-hosted"
      ],
      "platform": "linux",
      "name": "ntfy",
      "network": "exposed",
      "logo": "https://raw.githubusercontent.com/binwiederhier/ntfy/main/web/public/static/images/ntfy.png",
      "image": "binwiederhier/ntfy:latest",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "command": "serve",
      "volumes": [
        {
          "container": "/var/cache/ntfy"
        },
        {
          "container": "/etc/ntfy",
          "read_only": true
        }
      ],
      "env": [
        {
          "name": "UID",
          "label": "Id of the user running the container"
        },
        {
          "name": "GID",
          "label": "Id of the group running the container"
        },
        {
          "name": "TZ",
          "label": "Timezone for the container",
          "select": [
            {
              "text": "Etc/UTC (+00:00)",
              "value": "Etc/UTC",
              "default": true
            },
            {
              "text": "America/Sao_Paulo (-03:00)",
              "value": "America/Sao_Paulo"
            }
          ]
        }
      ]
    },
    {
      "type": 1,
      "title": "duplicati",
      "description": "Duplicati is a free, open source, backup client that securely stores encrypted, incremental, compressed backups on cloud storage services and remote file servers.",
      "categories": [
        "backups",
        "self-hosted"
      ],
      "logo": "https://raw.githubusercontent.com/duplicati/duplicati/master/Assets/application%20icon/application_icon.ico",
      "image": "lscr.io/linuxserver/duplicati:latest",
      "ports": [
        "8200:8200/tcp"
      ],
      "restart_policy": "unless-stopped",
      "network": "exposed",
      "name": "duplicati",
      "administrator-only": false,
      "platform": "linux",
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source",
          "read_only": true
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "Id of the user running the container"
        },
        {
          "name": "PGID",
          "label": "Id of the group running the container"
        },
        {
          "name": "CLI_ARGS",
          "label": "Optionally specify any CLI variables you want to launch the app with."
        },
        {
          "name": "TZ",
          "label": "Timezone for the container",
          "select": [
            {
              "text": "Etc/UTC (+00:00)",
              "value": "Etc/UTC",
              "default": true
            },
            {
              "text": "America/Sao_Paulo (-03:00)",
              "value": "America/Sao_Paulo"
            }
          ]
        }
      ]
    },
    {
      "type": 1,
      "title": "shiori",
      "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
      "logo": "https://raw.githubusercontent.com/go-shiori/shiori/master/internal/view/res/apple-touch-icon-152x152.png",
      "categories": [
        "self-hosted",
        "bookmarks"
      ],
      "image": "ghcr.io/go-shiori/shiori",
      "name": "shiori",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/shiori"
        }
      ],
      "restart_policy": "unless-stopped",
      "network": "exposed",
      "administrator-only": false,
      "note": "Override 'command' with 'serve --webroot [PATH]' to host on subfolders paths (eg.: domain.com/shiori).",
      "platform": "linux",
      "env": [
        {
          "name": "SHIORI_DBMS",
          "label": "SHIORI_DBMS",
          "description": "Specifies which database engine to use",
          "select": [
            {
              "text": "MySQL",
              "value": "mysql"
            },
            {
              "text": "PostgreSQL",
              "value": "postgresql"
            },
            {
              "text": "SQLite",
              "value": "",
              "default": true
            }
          ]
        },
        {
          "name": "SHIORI_MYSQL_USER",
          "label": "SHIORI_MYSQL_USER",
          "description": "Name of MySQL user"
        },
        {
          "name": "SHIORI_MYSQL_PASS",
          "label": "SHIORI_MYSQL_PASS",
          "description": "Password for the above user"
        },
        {
          "name": "SHIORI_MYSQL_NAME",
          "label": "SHIORI_MYSQL_NAME",
          "description": "Name of database to use"
        },
        {
          "name": "SHIORI_MYSQL_ADDRESS",
          "label": "SHIORI_MYSQL_ADDRESS",
          "description": "Address of MySQL server, e.g. tcp(127.0.0.1:3306) or unix(/tmp/mysqld.sock)"
        },
        {
          "name": "SHIORI_PG_USER",
          "label": "SHIORI_PG_USER",
          "description": "Name of PostgreSQL user"
        },
        {
          "name": "SHIORI_PG_PASS",
          "label": "SHIORI_PG_PASS",
          "description": "Password for the above user"
        },
        {
          "name": "SHIORI_PG_NAME",
          "label": "SHIORI_PG_NAME",
          "description": "Name of database to use"
        },
        {
          "name": "SHIORI_PG_HOST",
          "label": "SHIORI_PG_HOST",
          "description": "Address of PostgreSQL server"
        },
        {
          "name": "SHIORI_PG_PORT",
          "label": "SHIORI_PG_PORT",
          "description": "Port number used by PostgreSQL server"
        }
      ]
    },
    {
      "type": 1,
      "title": "minecraft server",
      "description": "Docker Minecraft PaperMC server for 1.19, 1.18, 1.17 for AMD64 and ARM64 platforms. Works on Synology, Raspberry Pi 4 or any other systems that support docker.",
      "categories": [
        "game",
        "self-hosted"
      ],
      "logo": "https://raw.githubusercontent.com/jbonadiman/personal-server-stack/main/logos/minecraft-server.png",
      "image": "marctv/minecraft-papermc-server:latest",
      "ports": [
        "25565:25565/tcp",
        "25565:25565/udp"
      ],
      "restart_policy": "unless-stopped",
      "network": "exposed",
      "name": "minecraft-server",
      "administrator-only": false,
      "platform": "linux",
      "volumes": [
        {
          "container": "/data"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "Id of the user running the container"
        },
        {
          "name": "PGID",
          "label": "Id of the group running the container"
        },
        {
          "name": "MEMORYSIZE",
          "label": "Memory size in GB. Not more than 70% of the total memory in your system.",
          "default": "1G"
        },
        {
          "name": "TZ",
          "label": "Timezone for the container",
          "select": [
            {
              "text": "Etc/UTC (+00:00)",
              "value": "Etc/UTC",
              "default": true
            },
            {
              "text": "America/Sao_Paulo (-03:00)",
              "value": "America/Sao_Paulo"
            }
          ]
        },
        {
          "name": "PAPERMC_FLAGS",
          "label": "Command-line flags for PaperMC. Defaults to \"--nojline\".",
          "default": "--nojline"
        }
      ]
    }
  ]
}
